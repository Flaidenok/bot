from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler, CallbackContext

# Хранение состояния
user_data = {}

# Список товаров 
products = { 
    "Москва": { 
        "Краснопресненская": { 
            "Молочный шоколад(Бельгия), 2.5 кг": {"description": "Шоколад представлен в виде маленьких каллет, которые можно просто скушать, а можно и переплавить, используя его для приготовления ганаша, мусса, пралине, а также шоколадных плиток и конфет. Нежный молочный вкус хорошо сочетается с орехами, пряностями, фруктовыми добавками.", "price": 4999}, 
            "Глазурь белая кондитерская(Италия), 500 г": {"description": "Глазурь белая кондитерская Master Martini Caribe Bianco Dischi - это лауриновая кондитерская глазурь в форме дисков. Кондитерская глазурь применяется как заменитель белого шоколада. Используется для глазирования мороженого, кондитерских изделий, изготовления шоколадного декора.", "price": 3999}, 
            "Какао бобы дробленные(Франция), 90 гр": {"description": "Дробленные какао бобы изготовлены из отборных какао-бобов обжаренных по традиционным рецептурам. У них насыщенный, с деликатной горчинкой вкус обжаренного какао и хрустящая текстура, благодаря которым создается оригинальный, особенный вкус и у сладких десертов, и у острых блюд.", "price": 500}, 
            "Краситель гелевый водорастворимый": {"description": "Краситель водорастворимый с высокой концентрацией красящего пигмента. Густая консистенция позволяет ему хорошо окрашивать по всей массе основные кондитерские полуфабрикаты (желе, мусс, крем, тесто, мастика и другие), не изменяя их консистенцию. Не имеет вкуса и аромата, благодаря чему сохраняет первоначальные вкусовые свойства окрашиваемого продукта.", "price": 250}, 
            "Горячий шоколад(Франция), 1 кг": {"description": "Какао-порошок Cacao Barry Powdered Chocolate для горячего шоколада(Франция). Является полностью готовым продуктом для приготовления восхитительного горячего шоколада (смесь для горячего шоколада). Насыщенный вкус темного шоколада, легок в применении. Развести горячим молоком или водой, хорошо перемешать, чашка ароматного горячего шоколада готова.  ", "price": 1500}, 
       }, 
        "Арбатская": { 
            "Зефир "Невские Звезды" в тёмном шоколаде": {"description": "Легкий, сладкий, воздушный десерт в шоколаде, с содержанием какао около 54%. Это баланс вкуса, а также яркий букет эмоций.", "price": 260}, 
            "Мармелад (клубника), 160 г": {"description": "Состав: сахар, клубника, патока, желирующий агент-пектин, регуляторы кислотности: лимонная кислота, цитрат натрия. ", "price": 290}, 
            "Конфеты Трюфель с апельсиновыми цукатами, без сахара 1кг": {"description": "Состав: шоколад темный 54% какао «Барри Каллебаут»(«Barry Callebaut» Belgium), какао тертое, подсластитель мальтит, масло какао, эмульгатор: соевый лецитин, ваниль натуральная), масло сливочное, цукаты апельсина.", "price": 5000}, 
            "Трюфель с живицей янтаря без сахара 1кг": {"description": "Состав: шоколад темный без сахара: (какао тертое, какао-масло, эмульгатор: подсолнечный лецитин, ваниль натуральная, подсластитель: мальтит,), масло сливочное, хлопья кукурузные без сахара: (крупа кукурузная, соль), живица янтаря «AMBERUNITY»™ (натуральный экстракт янтаря, подсолнечное масло), сублимированный кранч маракуйя.", "price": 5500},
            "Набор трюфелей с кешью и кофе без сахара 120гр": {"description": "ТРЮФЕЛЬ С КОФЕ Состав: шоколад темный без сахара (какао тертое, масло какао, эмульгатор: подсолнечный лецитин, ваниль натуральная, подсластитель: мальтит), масло сливочное, кофе натуральный.", "price": 1250},
       }, 
    }, 
    "Санкт-Петербург": { 
        "Невский проспект": { 
            "Мешки кондитерские в рулоне 10 штук": {"description": "Качественный шов позволяет использовать мешок для плотных масс. 
мешок подходит для всех типов насадок и фиксаторов.", "price": 300}, 
            "Тёмный шоколад 54% (Россия), 500 г": {"description": "Состав: подсластитель мальтитол, какао тёртое, какао-масло, молоко сухое обезжиренное, эмульгатор лецитин соевый, подсластитель стевиозид, экстракт ванили.", "price": 700},

"Белый шоколад 32,8% (Россия), 500 г": {"description": "Состав: Мальтитол, какао-масло, молоко сухое цельное, сыворотка молочная сухая, инулин, эмульгаторы (лецитин соевый, Е476), экстракт ванили.", "price": 750}, 
            "Специализированный темный шоколад для фонтанов (Бельгия), 2.5 кг": {"description": "Специализированный темный шоколад для шоколадных фонтанов, который не требует предварительных приготовлений и дополнительного разжижения.", "price": 3000},
            "Форма Кольцо 160х70 нержавеющая сталь": {"description": "Форма Кольцо 160х70 нержавеющая сталь 1,0 мм (Россия)", "price": 700},
        }, 
        "Площадь Восстания": { 
            "Шоколад розовый клубничный (Бельгия), 2.5 кг": {"description": "Фруктовый розовый шоколад имеет по-настоящему изысканный вкус, благодаря сочетанию клубники и нежной ванильной основы. По своим качествам его можно сравнить с десертом из свежей ягоды со сливками.", "price": 5550}, 
            "Кандурин краситель пищевой "Золотой блеск", 5 гр": {"description": "Кандурин - натуральный пищевой краситель, получаемый из геологического или растительного сырья. Основой кандурина является природная слюда.", "price": 450}, 
            "Коврик тефлоновый для макаронс с трафаретом 30х40 см Алет (Россия)": {"description": "Коврик для выпечки макаронс Алет Baker тонкий (имеет толщину 80 мкм) и прозрачный, что дает возможность использовать его с трафаретом, подложенным снизу коврика, но в тоже время коврик достаточно прочный и износостойкий, в отличие от пергамента или бумаги для выпечки.", "price": 750}, 
            "Какао-масло рафинированное кусковое (Россия), 1 кг": {"description": "Рафинированное масло какао получают из тёртого какао методом горячего прессования. Далее масло подвергается рафинированию. Рафинированное масло имеет слабо выраженный аромат какао, светлого цвета. При комнатной температуре это масло твердое. ", "price": 4550},
            "Украшение шоколадное Камешки микс IINNER, 100 г": {"description": "Состав: молочный шоколад 61% (сахар, какао-масло, сухое цельное молоко, сухая молочная сыворотка, какао-масса, сухое обезжиренное молоко, эмульгатор: подсолнечный лецитин, ароматизатор (ваниль), цветная сахарная глазурь 39% (сахар, вода, глазирователи: шеллак (Е904), карнаубский воск (Е903), пчелиный воск (Е901), красители (Е102, Е110, E129, E133, E 141(ii), E 150d, E 153, E 160a(ii), E 171).", "price": 250},
       }, 
    }, 
}
        },
    },
}

# Менеджеры для веток 
managers = {
    "Москва": "https://t.me/Ksyshkaa00",
    "Санкт-Петербург": "https://t.me/vreind",
}

# Главное меню
main_menu_keyboard = [
    ['Каталог', 'Корзина'],
    ['Избранное', 'Связаться с менеджером']
]



def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text("Добро пожаловать в магазин!",
                              reply_markup=ReplyKeyboardMarkup(main_menu_keyboard, resize_keyboard=True))


# Обработка команды "Каталог"
def catalog(update: Update, context: CallbackContext) -> None:
    city = "Москва"
    metro = "Краснопресненская"

    user_data['city'] = city
    user_data['metro'] = metro

    show_catalog(update, context)


# Показ каталога товаров
def show_catalog(update: Update, context: CallbackContext) -> None:
    city = user_data.get('city')
    metro = user_data.get('metro')
    products_list = products[city][metro]

    keyboard = [[product] for product in products_list.keys()]
    keyboard.append(['Назад'])  # Добавляем кнопку "Назад"
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    update.message.reply_text("Выберите товар:", reply_markup=reply_markup)


# Обработка выбора товара
def handle_product(update: Update, context: CallbackContext) -> None:
    city = user_data.get('city')
    metro = user_data.get('metro')
    product_name = update.message.text

    if product_name == 'Назад':
        start(update, context)  # Возврат в главное меню
        return

    if city and metro and product_name in products[city][metro]:
        product = products[city][metro][product_name]
        user_data['selected_product'] = product_name
        update.message.reply_text(f"{product_name}\n{product['description']}\nЦена: {product['price']} руб.",
                                  reply_markup=InlineKeyboardMarkup([
                                      [InlineKeyboardButton("Добавить в корзину", callback_data='add_to_cart')],
                                      [InlineKeyboardButton("Добавить в избранное", callback_data='add_to_favorites')],
                                      [InlineKeyboardButton("Назад", callback_data='back_to_catalog')]
                                  ]))
    else:
        update.message.reply_text("Пожалуйста, выберите корректный товар.")


# Добавление в корзину
def add_to_cart(query: Update, context: CallbackContext) -> None:
    product_name = user_data.get('selected_product')
    if 'cart' not in user_data:
        user_data['cart'] = []
    user_data['cart'].append(product_name)
    context.bot.send_message(chat_id=query.message.chat_id, text=f"{product_name} добавлен в корзину.")

# Показ корзины
def show_cart(update: Update, context: CallbackContext) -> None:
    cart_items = user_data.get('cart', [])
    if not cart_items:
        update.message.reply_text("Корзина пуста.",
                                  reply_markup=ReplyKeyboardMarkup(main_menu_keyboard, resize_keyboard=True))
    else:
        cart_message = "Ваша корзина:\n" + "\n".join(cart_items)
        cart_message += "\n\nВыберите действие:"
        keyboard = [["Оформить заказ"], ["Назад"]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        update.message.reply_text(cart_message, reply_markup=reply_markup)


# Показ корзины
def show_cart(update: Update, context: CallbackContext) -> None:
    cart_items = user_data.get('cart', [])
    if not cart_items:
        update.message.reply_text("Корзина пуста.",
                                  reply_markup=ReplyKeyboardMarkup(main_menu_keyboard, resize_keyboard=True))
    else:
        cart_message = "Ваша корзина:\n" + "\n".join(cart_items)
        cart_message += "\n\nВыберите действие:"
        keyboard = [["Оформить заказ"], ["Назад"]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        update.message.reply_text(cart_message, reply_markup=reply_markup)


# Оформление заказа
def checkout(update: Update, context: CallbackContext) -> None:
    # Получаем ID менеджера в зависимости от города или логики
    manager_chat_id = managers[user_data['city']]

    # Перенаправление пользователя к менеджеру
    update.message.reply_text("Вы будете перенаправлены к менеджеру.", reply_markup=InlineKeyboardMarkup([
        [InlineKeyboardButton("Связаться с менеджером", url=f"https://t.me/{manager_chat_id}")]
    ]))


# Показ избранного
def show_favorites(update: Update, context: CallbackContext) -> None:
    favorites = user_data.get('favorites', [])
    if not favorites:
        update.message.reply_text("Избранное пусто.",
                                  reply_markup=ReplyKeyboardMarkup(main_menu_keyboard, resize_keyboard=True))
    else:
        favorites_message = "Ваши избранные товары:\n" + "\n".join(favorites)

        # Создаем список кнопок для избранного
        keyboard = [
            [InlineKeyboardButton(f"Добавить {item} в корзину", callback_data=f'add_fav_{item}')] for item in favorites
        ]
        keyboard.append([InlineKeyboardButton("Назад", callback_data='back_to_main_menu')])  # Добавляем кнопку "Назад"

        reply_markup = InlineKeyboardMarkup(keyboard)  # Используем InlineKeyboardMarkup для инлайн-кнопок
        update.message.reply_text(favorites_message, reply_markup=reply_markup)


# Обработка нажатий на кнопки
def button_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()

    if query.data == 'add_to_cart':
        add_to_cart(query, context)
    elif query.data == 'checkout':
        checkout(query, context)  # Здесь просто вызываем функцию checkout
    elif query.data == 'add_to_favorites':
        product_name = user_data.get('selected_product')
        if 'favorites' not in user_data:
            user_data['favorites'] = []
        user_data['favorites'].append(product_name)
        query.message.reply_text(f"{product_name} добавлен в избранное.")
    elif query.data == 'back_to_catalog':
        show_catalog(query, context)
    elif query.data == 'back_to_main_menu':
        start(query, context)  # Возврат в главное меню
    elif query.data.startswith('add_fav_'):
        product_name = query.data.split('add_fav_', 1)[1]
        user_data['selected_product'] = product_name
        add_to_cart(query, context)
    elif query.data == 'contact_manager':
        # Здесь можно назначить другого менеджера, если это необходимо
        other_manager_chat_id = other_managers[user_data['city']]
        query.message.reply_text("Перенаправляю вас к другому менеджеру...", reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("Связаться с другим менеджером", url=f"https://t.me/{other_manager_chat_id}")]
        ]))

# Основная функция
if name == "main":
    updater = Updater("7828219963:AAH2jNtlbdtTECOCW6th1OWX4D7RQy4lFmI", use_context=True)

    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.regex('^Каталог$'), catalog))
    dp.add_handler(MessageHandler(Filters.regex('^Корзина$'), show_cart))
    dp.add_handler(MessageHandler(Filters.regex('^Избранное$'), show_favorites))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_product))
    dp.add_handler(CallbackQueryHandler(button_handler))

    updater.start_polling()
    updater.idle()
